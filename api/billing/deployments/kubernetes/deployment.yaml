apiVersion: apps/v1
kind: Deployment
metadata:
  name: demo01-api
  namespace: default
  labels:
    app: demo01-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: demo01-api
  template:
    metadata:
      labels:
        app: demo01-api
    spec:
      containers:
      - name: api
        image: your-registry/demo01-api:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: APP_ENV
          value: "prod"
        - name: DEMO01_DATABASE_HOST
          value: "postgres-service"
        - name: DEMO01_DATABASE_USERNAME
          value: "postgres"
        - name: DEMO01_DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: demo01-secrets
              key: DEMO01_DATABASE_PASSWORD
        volumeMounts:
        - name: config
          mountPath: /app/config
          readOnly: true
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: config
        configMap:
          name: demo01-config
---
apiVersion: v1
kind: Service
metadata:
  name: demo01-api-service
  namespace: default
spec:
  selector:
    app: demo01-api
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8080
  type: ClusterIP